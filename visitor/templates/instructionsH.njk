{% extends "layout.njk" %}
{% import "macros.njk" as macros %}

{% block main %}
#pragma once

#ifndef _INSTRUCTIONS_{{ instruction.name | constantCase }}_H_
#define _INSTRUCTIONS_{{ instruction.name | constantCase }}_H_

{{ includes }}

struct {{ instruction.name | pascalCase }}InstructionData {
  {% for arg in instructionArgs %}
    {% if arg.default %}
      {{ arg.type }} {{ arg.name | pascalCase }};
    {% endif %}
  {% endfor %}
};

{% if hasArgs %}
struct {{ instruction.name | pascalCase }}InstructionArgs {
  {% for arg in instructionArgs %}
    {% if not arg.default %}
      {{ arg.type }} {{ arg.name | pascalCase }};
    {% endif %}
  {% endfor %}
};
{% endif %}

{% for nestedStruct in typeManifest.nestedStructs %}
{{ nestedStruct }}
{% endfor %}

#endif

{% endblock %}   